<?xml version="1.0"?>
<root>
    <BehaviorTree ID="Dive">
        <Sequence>
            <SetBlackboard output_key="0" value="0"/>
            <Action ID="GetOdometry" op="{op}" or="{or}" oy="{oy}" x="{x}" y="{y}" z="{z}"/>
            <Action ID="PublishToController" isOrientation="1" mode="3" x="0" y="0" z="{oy}"/>
            <SubTree ID="PrimitiveMovePosition" __shared_blackboard="false" x="x" y="y" z="depth"/>
            <SubTree ID="PrimitiveMoveOrientation" __shared_blackboard="false" p="0" r="0" y="oy"/>
        </Sequence>
    </BehaviorTree>
    <BehaviorTree ID="KillController">
        <Sequence>
            <Action ID="PublishToController" isOrientation="1" mode="0" x="0" y="0" z="0"/>
            <Action ID="PublishToController" isOrientation="0" mode="0" x="0" y="0" z="0"/>
        </Sequence>
    </BehaviorTree>
    <BehaviorTree ID="Move">
        <Sequence>
            <Action ID="Info" message="Moving to XYZ {x}, {y}, {z} with RPY {or}, {op}, {oy}"/>
            <SetBlackboard output_key="0" value="0"/>
            <Action ID="GetOdometry" op="{cop}" or="{cor}" oy="{coy}" x="{cx}" y="{cy}" z="{cz}"/>
            <Action ID="CalculateDistance" dist="{dist}" x1="{cx}" x2="{x}" y1="{cy}" y2="{y}" z1="0" z2="0"/>
            <IfThenElse name="have robot face goal point if far away from it">
                <Condition ID="CompareNums" a="{dist}" b="0.75" test="&gt;"/>
                <Sequence name="Get yaw to face towards goal point">
                    <Action ID="HeadingToPoint" currX="{cx}" currY="{cy}" heading="{yaw}" targX="{x}" targY="{y}"/>
                    <SetBlackboard output_key="goal_yaw" value="{yaw}"/>
                </Sequence>
                <Sequence>
                    <SetBlackboard output_key="goal_yaw" value="{coy}"/>
                </Sequence>
            </IfThenElse>
            <SubTree ID="PrimitiveMovePosition" __shared_blackboard="false" x="cx" y="cy" z="cz"/>
            <SubTree ID="PrimitiveMoveOrientation" __shared_blackboard="false" p="0" r="0" y="goal_yaw"/>
            <SubTree ID="PrimitiveMovePosition" __shared_blackboard="false" x="x" y="y" z="z"/>
            <SubTree ID="PrimitiveMoveOrientation" __shared_blackboard="false" p="or" r="op" y="oy"/>
            <Action ID="Wait" seconds="2"/>
            <Action ID="Info" message="Move Complete."/>
        </Sequence>
    </BehaviorTree>
    <BehaviorTree ID="PrimitiveMoveOrientation">
        <Sequence>
            <Action ID="Info" message="Rotating to RPY {r}, {p}, {y}"/>
            <Fallback>
                <Decorator ID="RetryUntilSuccessfulOrTimeout" num_seconds="10">
                    <Sequence>
                        <Action ID="PublishToController" isOrientation="1" mode="3" x="{r}" y="{p}" z="{y}"/>
                        <Action ID="GetOdometry" name="Get Current RPY" op="{cp}" or="{cr}" oy="{cy}" x="" y="" z=""/>
                        <Condition ID="ApproxEqualTo" a="{cr}" b="{r}" name="At goal roll?" range="0.25"/>
                        <Condition ID="ApproxEqualTo" a="{cp}" b="{p}" name="At goal pitch?" range="0.25"/>
                        <Condition ID="ApproxEqualTo" a="{cy}" b="{y}" name="At goal yaw?" range="0.25"/>
                    </Sequence>
                </Decorator>
                <ForceSuccess>
                    <Sequence>
                        <Action ID="GetOdometry" op="{cr}" or="{cp}" oy="{cy}" x="" y="" z=""/>
                        <Action ID="Error" message="Couldn't bring talos to the desired orientation! Wanted {r}, {p}, {y} but got {cr}, {cp}, {cy}. Moving on anyway."/>
                    </Sequence>
                </ForceSuccess>
            </Fallback>
        </Sequence>
    </BehaviorTree>
    <BehaviorTree ID="PrimitiveMovePosition">
        <Sequence>
            <Action ID="Info" message="Translating to XYZ: {x}, {y}, {z}"/>
            <Fallback>
                <Decorator ID="RetryUntilSuccessfulOrTimeout" num_seconds="30">
                    <Sequence>
                        <Action ID="PublishToController" isOrientation="0" mode="3" x="{x}" y="{y}" z="{z}"/>
                        <Action ID="GetOdometry" name="Get Current XYZ" op="" or="" oy="" x="{cx}" y="{cy}" z="{cz}"/>
                        <Action ID="CalculateDistance" dist="{dist}" x1="{x}" x2="{cx}" y1="{y}" y2="{cy}" z1="{z}" z2="{cz}"/>
                        <Condition ID="CompareNums" a="{dist}" b="0.25" name="At goal point?" test="&lt;"/>
                    </Sequence>
                </Decorator>
                <ForceSuccess>
                    <Sequence>
                        <Action ID="GetOdometry" op="" or="" oy="" x="{cx}" y="{cy}" z="{cz}"/>
                        <Action ID="Error" message="Failed to move to position! Wanted {x}, {y}, {z} but got {cx}, {cy}, {cz}"/>
                    </Sequence>
                </ForceSuccess>
            </Fallback>
        </Sequence>
    </BehaviorTree>
    <BehaviorTree ID="RelativeMove">
        <Sequence>
            <Action ID="TransformPose" from_frame="{frame_name}" op="{op}" or="{or}" out_op="gop" out_or="gor" out_oy="goy" out_x="gx" out_y="gy" out_z="gz" oy="{oy}" to_frame="world" x="{x}" y="{y}" z="{z}"/>
            <SubTree ID="Move" __shared_blackboard="false" op="gop" or="gor" oy="goy" x="gx" y="gy" z="gz"/>
        </Sequence>
    </BehaviorTree>
    <BehaviorTree ID="Search">
        <Sequence name="Search">
            <Action ID="Format" format="{object_name}_frame" out="frame"/>
            <Action ID="GetOdometry" op="op" or="or" oy="oy" x="x" y="y" z="z"/>
            <Action ID="TransformPose" from_frame="{frame}" op="0" or="0" out_op="f_op" out_or="f_or" out_oy="f_oy" out_x="f_x" out_y="f_y" out_z="f_z" oy="0" to_frame="world" x="0" y="0" z="0"/>
            <Action ID="CalculateDistance" dist="dist" x1="{x}" x2="{f_x}" y1="{y}" y2="{f_y}" z1="{z]" z2="{f_z}"/>
            <Action ID="Info" message="dist: {dist}"/>
            <Decorator ID="RetryUntilSuccessfulOrTimeout" name="Search_loop" num_seconds="{timeout_secs}">
                <Sequence>
                    <Action ID="Math" a="{dist}" b="0.67" operator="*" out="dist"/>
                    <Action ID="Info" message="Search moving to {dist} meters away from {object_name}"/>
                    <Action ID="TransformPose" from_frame="{frame}" op="0" or="0" out_op="gop" out_or="gor" out_oy="goy" out_x="gx" out_y="gy" out_z="gz" oy="3.1415" to_frame="world" x="{dist}" y="0" z="0"/>
                    <SubTree ID="Move" __shared_blackboard="false" op="gop" or="gor" oy="goy" x="gx" y="gy" z="gz"/>
                    <Action ID="Info" message="Let mapping gather detections on {object_name}"/>
                    <Action ID="Wait" seconds="10"/>
                    <Action Covariance="cov" ID="getCovariance" Target="{object_name}"/>
                    <Action ID="Info" message="object {object_name} covariance at {cov}, target is {target_cov}"/>
                    <Fallback>
                        <Condition ID="CompareNums" a="{cov}" b="{target_cov}" test="&lt;"/>
                        <Condition ID="CompareNums" a="{dist}" b="1" test="&lt;"/>
                    </Fallback>
                </Sequence>
            </Decorator>
            <Fallback>
                <Condition ID="CompareNums" a="{dist}" b="1" test="&gt;"/>
                <ForceFailure>
                    <Action ID="Error" message="Could not find {object_name}. Got within 1 meter and couldn't converge the estimate."/>
                </ForceFailure>
            </Fallback>
        </Sequence>
    </BehaviorTree>
    <BehaviorTree ID="WaitForKillSwitch">
        <Sequence>
            <Action ID="SetStatus" status="waiting"/>
            <Action ID="Info" message="Waiting for kill switch insert..."/>
            <Action ID="Wait" seconds="5"/>
            <RetryUntilSuccessful num_attempts="-1">
                <Sequence>
                    <Action ID="GetBoolTopic" topic="state/kill" value="{kill_switch_inserted}"/>
                    <Inverter name="IsFalse">
                        <Condition ID="IsTrue" value="{kill_switch_inserted}"/>
                    </Inverter>
                    <Action ID="Info" message="KILL SWITCH INSERTED, TREE STARTING IN 5 SECONDS"/>
                </Sequence>
            </RetryUntilSuccessful>
            <Action ID="SetStatus" status="starting"/>
            <Action ID="Wait" seconds="5"/>
        </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
        <Condition ID="ApproxEqualTo">
            <input_port name="a" required="true"/>
            <input_port name="b" required="true"/>
            <input_port name="range" required="true"/>
        </Condition>
        <Action ID="CalculateDistance">
            <output_port name="dist" required="false"/>
            <input_port name="x1" required="true"/>
            <input_port name="x2" required="true"/>
            <input_port name="y1" required="true"/>
            <input_port name="y2" required="true"/>
            <input_port name="z1" required="true"/>
            <input_port name="z2" required="true"/>
        </Action>
        <Action ID="CallSetBoolService">
            <input_port name="data" required="true">boolean value to set the thing to</input_port>
            <input_port name="srv_name" required="true">Name of the service to call</input_port>
            <input_port name="time_limit_secs" required="true">time limit for service after the call is made. Another second may be consumed waiting for it to come up</input_port>
        </Action>
        <Action ID="CallTriggerService">
            <input_port name="srv_name" required="true"/>
            <input_port name="time_limit_secs" required="true"/>
        </Action>
        <Condition ID="CompareNums">
            <input_port name="a" required="true"/>
            <input_port name="b" required="true"/>
            <input_port name="test" required="true">can be &quot;&lt;&quot;, &quot;&gt;&quot;, or &quot;=&quot;.</input_port>
        </Condition>
        <Action ID="ComputeFrameAlignment">
            <input_port name="frameName" required="true"/>
            <output_port name="out_x" required="false"/>
            <output_port name="out_y" required="false"/>
            <output_port name="out_z" required="false"/>
            <input_port name="x" required="true">target x-pos of frameName in world frame</input_port>
            <input_port name="y" required="true">target y-pos of frameName in world frame</input_port>
            <input_port name="z" required="true">target z-pos of frameName in world frame</input_port>
        </Action>
        <SubTree ID="Dive">
            <input_port default="false" name="__shared_blackboard" required="false">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
            <input_port name="depth" required="true">depth to submerge to</input_port>
        </SubTree>
        <Action ID="Error">
            <input_port name="message" required="true">The message to print.</input_port>
        </Action>
        <Action ID="Format">
            <input_port name="format" required="true"/>
            <output_port name="out" required="false"/>
        </Action>
        <Action ID="GetActuatorStatus">
            <output_port name="claw_state" required="false"/>
            <output_port name="dropper1_state" required="false"/>
            <output_port name="dropper2_state" required="false"/>
            <output_port name="torpedo1_state" required="false"/>
            <output_port name="torpedo2_state" required="false"/>
        </Action>
        <Action ID="GetBoolTopic">
            <input_port name="topic" required="true">The topic to subscribe to.</input_port>
            <output_port name="value" required="false"/>
        </Action>
        <Action ID="GetOdometry">
            <output_port name="op" required="false"/>
            <output_port name="or" required="false"/>
            <output_port name="oy" required="false"/>
            <output_port name="x" required="false"/>
            <output_port name="y" required="false"/>
            <output_port name="z" required="false"/>
        </Action>
        <Action ID="GetSwitchState">
            <output_port name="aux_switch_inserted" required="false"/>
            <output_port name="kill_switch_inserted" required="false"/>
        </Action>
        <Action ID="HeadingToPoint">
            <input_port name="currX" required="true"/>
            <input_port name="currY" required="true"/>
            <output_port name="heading" required="false"/>
            <input_port name="targX" required="true"/>
            <input_port name="targY" required="true"/>
        </Action>
        <Action ID="Info">
            <input_port name="message" required="true">The message to print.</input_port>
        </Action>
        <Condition ID="IsTrue">
            <input_port name="value" required="true"/>
        </Condition>
        <SubTree ID="KillController"/>
        <Action ID="Math">
            <input_port name="a" required="true"/>
            <input_port name="b" required="true"/>
            <input_port default="+" name="operator" required="true">can be &quot;+&quot;, &quot;-&quot;, &quot;*&quot;, or &quot;/&quot;. Node will compute a &quot;op b. For example, if the operator is &quot;-&quot;, output will be a - b.</input_port>
            <output_port name="out" required="false"/>
        </Action>
        <SubTree ID="Move">
            <input_port default="false" name="__shared_blackboard" required="false">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
            <input_port name="op" required="true"/>
            <input_port name="or" required="true"/>
            <input_port name="oy" required="true"/>
            <input_port name="x" required="true"/>
            <input_port name="y" required="true"/>
            <input_port name="z" required="true"/>
        </SubTree>
        <SubTree ID="PrimitiveMoveOrientation">
            <input_port default="false" name="__shared_blackboard" required="false">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
            <input_port name="p" required="true"/>
            <input_port name="r" required="true"/>
            <input_port name="y" required="true"/>
        </SubTree>
        <SubTree ID="PrimitiveMovePosition">
            <input_port default="false" name="__shared_blackboard" required="false">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
            <input_port name="x" required="true"/>
            <input_port name="y" required="true"/>
            <input_port name="z" required="true"/>
        </SubTree>
        <Action ID="PublishToController">
            <input_port name="isOrientation" required="true"/>
            <input_port name="mode" required="true"/>
            <input_port name="x" required="true"/>
            <input_port name="y" required="true"/>
            <input_port name="z" required="true"/>
        </Action>
        <SubTree ID="RelativeMove">
            <input_port default="false" name="__shared_blackboard" required="false">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
            <input_port name="frame_name" required="true">the frame to move relative to</input_port>
            <input_port name="op" required="true"/>
            <input_port name="or" required="true"/>
            <input_port name="oy" required="true"/>
            <input_port name="x" required="true"/>
            <input_port name="y" required="true"/>
            <input_port name="z" required="true"/>
        </SubTree>
        <Decorator ID="RetryUntilSuccessfulOrTimeout">
            <input_port name="num_seconds" required="true">number of seconds until abandonment.</input_port>
        </Decorator>
        <SubTree ID="Search">
            <input_port default="false" name="__shared_blackboard" required="false">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
            <input_port name="frame_name" required="true">Frame to search for</input_port>
            <input_port default="0.01" name="target_cov" required="true">Target covariance to end search</input_port>
            <input_port default="120" name="timeout_secs" required="true">Timeout for search</input_port>
        </SubTree>
        <Action ID="SetStatus">
            <input_port name="status" required="true"/>
        </Action>
        <Action ID="TransformPose">
            <input_port name="from_frame" required="true"/>
            <input_port name="op" required="true"/>
            <input_port name="or" required="true"/>
            <output_port name="out_op" required="false"/>
            <output_port name="out_or" required="false"/>
            <output_port name="out_oy" required="false"/>
            <output_port name="out_x" required="false"/>
            <output_port name="out_y" required="false"/>
            <output_port name="out_z" required="false"/>
            <input_port name="oy" required="true"/>
            <input_port name="to_frame" required="true"/>
            <input_port name="x" required="true"/>
            <input_port name="y" required="true"/>
            <input_port name="z" required="true"/>
        </Action>
        <Action ID="Wait">
            <input_port name="seconds" required="true">number of seconds to wait.</input_port>
        </Action>
        <SubTree ID="WaitForKillSwitch"/>
        <Action ID="getCovariance">
            <output_port name="Covariance" required="false">Covariance of frame</output_port>
            <input_port name="Target" required="true">Frame to get covariance of</input_port>
        </Action>
    </TreeNodesModel>
    <!-- ////////// -->
</root>

